#!/usr/bin/env node

// Script para verificar e corrigir importa√ß√µes

async function verificarImportacoes() {
    console.log('üîç === VERIFICANDO IMPORTA√á√ïES ===\n');
    
    try {
        // Testar importa√ß√£o da IntegracaoIA
        console.log('1. Testando IntegracaoIA original...');
        const integracaoModule = require('../integracaoIA');
        console.log('   Tipo:', typeof integracaoModule);
        console.log('   √â classe?', typeof integracaoModule === 'function');
        
        // Testar importa√ß√£o da IntegracaoIAExtendida
        console.log('\n2. Testando IntegracaoIAExtendida...');
        const IntegracaoIAExtendida = require('../integracaoIAExtendida');
        console.log('   Tipo:', typeof IntegracaoIAExtendida);
        console.log('   √â classe?', typeof IntegracaoIAExtendida === 'function');
        
        // Testar instancia√ß√£o da vers√£o estendida
        console.log('\n3. Testando instancia√ß√£o da vers√£o estendida...');
        const ia = new IntegracaoIAExtendida();
        console.log('   ‚úÖ IntegracaoIAExtendida instanciada com sucesso');
        console.log('   M√©todos dispon√≠veis:', Object.getOwnPropertyNames(Object.getPrototypeOf(ia)));
        
        // Testar m√©todo gerarTexto
        console.log('\n4. Testando m√©todo gerarTexto...');
        if (typeof ia.gerarTexto === 'function') {
            console.log('   ‚úÖ M√©todo gerarTexto dispon√≠vel');
            
            // Teste r√°pido
            const resultado = await ia.gerarTexto('Teste r√°pido', 10);
            console.log('   ‚úÖ M√©todo executado, tipo resultado:', typeof resultado);
        } else {
            console.log('   ‚ùå M√©todo gerarTexto n√£o encontrado');
        }
        
        console.log('\n‚úÖ Verifica√ß√£o conclu√≠da com sucesso!');
        
    } catch (error) {
        console.error('‚ùå Erro na verifica√ß√£o:', error.message);
        console.log('\nüîß Tentando corrigir...');
        await corrigirImportacoes();
    }
}

async function corrigirImportacoes() {
    const fs = require('fs');
    const path = require('path');
    
    console.log('üîß Corrigindo arquivo integracaoIA.js...');
    
    const caminhoIntegracao = path.join(__dirname, '..', 'integracaoIA.js');
    
    if (!fs.existsSync(caminhoIntegracao)) {
        console.log('‚ùå Arquivo integracaoIA.js n√£o encontrado');
        return;
    }
    
    let conteudo = fs.readFileSync(caminhoIntegracao, 'utf8');
    
    // Verificar se tem export correto
    if (conteudo.includes('module.exports = { IntegracaoIA }')) {
        console.log('üîÑ Corrigindo exporta√ß√£o...');
        conteudo = conteudo.replace('module.exports = { IntegracaoIA }', 'module.exports = IntegracaoIA');
        fs.writeFileSync(caminhoIntegracao, conteudo);
        console.log('‚úÖ Exporta√ß√£o corrigida');
    } else if (conteudo.includes('module.exports = IntegracaoIA')) {
        console.log('‚úÖ Exporta√ß√£o j√° est√° correta');
    } else {
        console.log('‚ö†Ô∏è Padr√£o de exporta√ß√£o n√£o reconhecido');
        
        // Adicionar exporta√ß√£o no final se n√£o existir
        if (!conteudo.includes('module.exports')) {
            conteudo += '\n\nmodule.exports = IntegracaoIA;\n';
            fs.writeFileSync(caminhoIntegracao, conteudo);
            console.log('‚úÖ Exporta√ß√£o adicionada');
        }
    }
    
    // Testar novamente
    console.log('\nüß™ Testando ap√≥s corre√ß√£o...');
    try {
        delete require.cache[require.resolve('../integracaoIA')];
        const IntegracaoIA = require('../integracaoIA');
        const ia = new IntegracaoIA();
        console.log('‚úÖ Corre√ß√£o bem-sucedida!');
    } catch (error) {
        console.log('‚ùå Ainda h√° problemas:', error.message);
    }
}

// Executar se for chamado diretamente
if (require.main === module) {
    verificarImportacoes().catch(console.error);
}

module.exports = { verificarImportacoes };