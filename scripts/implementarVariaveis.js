#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

class ImplementadorVariaveis {
    constructor() {
        this.geradorPath = path.join(__dirname, '..', 'gerarRoteiro.js');
    }

    implementarTodasVariaveis() {
        console.log('üõ†Ô∏è === IMPLEMENTANDO TODAS AS VARI√ÅVEIS ===\n');

        const implementacoes = `
    // === IMPLEMENTA√á√ïES DE TODAS AS VARI√ÅVEIS ===
    
    // Personagens
    obterApresentador() {
        return Math.random() > 0.5 ? 'Tain√°' : 'Ira√≠';
    }
    
    obterApresentadorPrincipal() {
        return 'Tain√°'; // Sempre inicia
    }
    
    obterApresentadorSecundario() {
        return 'Ira√≠';
    }

    // Coment√°rios espec√≠ficos de Parintins/Boi-Bumb√°
    gerarComentarioBoiTaina() {
        const comentarios = [
            "Garantido no cora√ß√£o sempre, n√© meu povo!",
            "Vermelho e branco √© a nossa paix√£o!",
            "O sangue ind√≠gena pulsa forte no Festival!",
            "Parintins √© magia pura, maninho!"
        ];
        return comentarios[Math.floor(Math.random() * comentarios.length)];
    }
    
    gerarComentarioBoiIrai() {
        const comentarios = [
            "Rapaz, os dois bois s√£o impressionantes!",
            "Pois √©, n√©? O Festival √© patrim√¥nio nosso!",
            "√â massa ver toda essa cultura amaz√¥nica!",
            "Barbaridade, que espet√°culo!"
        ];
        return comentarios[Math.floor(Math.random() * comentarios.length)];
    }

    // Coment√°rios sobre not√≠cias
    gerarComentarioIraiManchete() {
        const comentarios = [
            "Pois √©, rapaz... a situa√ß√£o t√° bem assim mesmo.",
            "√â bem assim que acontece aqui em Manaus, n√©?",
            "Rapaz, isso a√≠ √© t√≠pico da nossa regi√£o.",
            "Caboco, essa hist√≥ria √© interessante mesmo!"
        ];
        return comentarios[Math.floor(Math.random() * comentarios.length)];
    }
    
    gerarComentarioTaina() {
        const comentarios = [
            "Eita, meu povo! Que hist√≥ria essa!",
            "N√©, pessoal? A gente sempre traz o que t√° rolando!",
            "Massa demais essa not√≠cia!",
            "Maninho, isso a√≠ √© importante de saber!"
        ];
        return comentarios[Math.floor(Math.random() * comentarios.length)];
    }

    // Coment√°rios de ouvintes
    gerarComentarioOuvinte() {
        const comentarios = [
            "'Adoro voc√™s!' - Maria, do Coroado",
            "'Melhor podcast de Manaus!' - Jo√£o, da Compensa",
            "'BubuiA News sempre no meu cora√ß√£o!' - Ana, da Cidade Nova",
            "'Not√≠cia quente direto do igarap√©!' - Pedro, do Centro"
        ];
        return comentarios[Math.floor(Math.random() * comentarios.length)];
    }

    // Rivalidade amig√°vel
    gerarComentarioRivalidade() {
        const rivalidades = [
            {
                taina: "Ira√≠, voc√™ tem que escolher um lado no Festival!",
                irai: "Rapaz, os dois bois s√£o bonitos, n√©?"
            },
            {
                irai: "Essa Tain√° n√£o sossega com o Garantido!",
                taina: "N√© que √©! Vermelho e branco no cora√ß√£o!"
            }
        ];
        const escolhida = rivalidades[Math.floor(Math.random() * rivalidades.length)];
        return \`**Tain√°:** \${escolhida.taina}\\n**Ira√≠:** \${escolhida.irai}\`;
    }

    // Despedidas e encerramentos
    gerarDespedidaConjunta() {
        const despedidas = [
            "**Tain√°:** Valeu, meu povo!\\n**Ira√≠:** At√© a pr√≥xima, pessoal!",
            "**Ira√≠:** Foi massa estar com voc√™s!\\n**Tain√°:** BubuiA News sempre no ar!",
            "**Tain√°:** Comenta a√≠ da sua rede!\\n**Ira√≠:** E n√£o esque√ßam de compartilhar!"
        ];
        return despedidas[Math.floor(Math.random() * despedidas.length)];
    }
    
    gerarEncerramentoTaina() {
        const encerramentos = [
            "Eita, meu povo! Foi massa demais estar com voc√™s hoje!",
            "N√©, pessoal? O BubuiA News t√° sempre aqui pra voc√™s!",
            "Massa! At√© o pr√≥ximo epis√≥dio, maninho!"
        ];
        return encerramentos[Math.floor(Math.random() * encerramentos.length)];
    }
    
    gerarEncerramentoIrai() {
        const encerramentos = [
            "Pois √©, n√©? Foi √≥timo estar aqui com voc√™s hoje!",
            "Rapaz, sempre bom conversar com voc√™s!",
            "√â bem assim mesmo, caboco! At√© a pr√≥xima!"
        ];
        return encerramentos[Math.floor(Math.random() * encerramentos.length)];
    }

    // Di√°logos culturais
    gerarDialogoCultura() {
        const dialogos = [
            {
                taina: "A floresta ensina quem sabe escutar, n√© maninho?",
                irai: "√â verdade! Essa sabedoria ancestral √© impressionante."
            },
            {
                irai: "Conta a√≠ sobre essas tradi√ß√µes de Parintins, Tai.",
                taina: "Eita! √â muita hist√≥ria bonita do meu povo!"
            }
        ];
        const escolhido = dialogos[Math.floor(Math.random() * dialogos.length)];
        return \`**Tain√°:** \${escolhido.taina}\\n**Ira√≠:** \${escolhido.irai}\`;
    }

    // Not√≠cias
    gerarNoticia1() {
        const noticias = [
            "Prefeitura anuncia obras na Constantino Nery para melhorar tr√¢nsito",
            "Teatro Amazonas recebe espet√°culo regional neste fim de semana",
            "Mercado Municipal passa por revitaliza√ß√£o em nova fase"
        ];
        return noticias[Math.floor(Math.random() * noticias.length)];
    }
    
    gerarNoticia2() {
        const noticias = [
            "Festival de Parintins divulga programa√ß√£o oficial de 2025",
            "Feira de artesanato amaz√¥nico acontece na Ponta Negra",
            "Centro Cultural recebe exposi√ß√£o sobre cultura ind√≠gena"
        ];
        return noticias[Math.floor(Math.random() * noticias.length)];
    }
    
    gerarNoticia3() {
        const noticias = [
            "Chuvas causam alagamentos pontuais na Zona Leste",
            "Inaugura√ß√£o de nova unidade de sa√∫de na Compensa",
            "Projeto de preserva√ß√£o do Meeting das √Åguas ganha for√ßa"
        ];
        return noticias[Math.floor(Math.random() * noticias.length)];
    }
    
    gerarNoticiaEsporte() {
        const noticias = [
            "Nacional prepara elenco para temporada 2025",
            "Fast Clube anuncia contrata√ß√µes para a S√©rie D",
            "Campeonato Amazonense divulga tabela de jogos"
        ];
        return noticias[Math.floor(Math.random() * noticias.length)];
    }

    // Eventos
    gerarEventoDestaque() {
        const eventos = [
            "Festival gastron√¥mico na Ponta Negra",
            "Show regional no Largo de S√£o Sebasti√£o",
            "Feira de artesanato no Centro Hist√≥rico",
            "Apresenta√ß√£o cultural no Teatro Amazonas"
        ];
        return eventos[Math.floor(Math.random() * eventos.length)];
    }

    // Curiosidades
    gerarCuriosidadeRegional() {
        const curiosidades = [
            "Voc√™ sabia que o Meeting das √Åguas pode ser visto do espa√ßo?",
            "O Teatro Amazonas foi constru√≠do no auge da borracha!",
            "Parintins √© conhecida mundialmente pelo Boi-Bumb√°!",
            "Manaus √© a porta de entrada para a maior floresta do mundo!"
        ];
        return curiosidades[Math.floor(Math.random() * curiosidades.length)];
    }

    // Listas de g√≠rias
    obterListaGiriasTaina() {
        return "eita, n√©, meu povo, massa, danado, maninho, curumim";
    }
    
    obterListaGiriasIrai() {
        return "rapaz, pois √©, n√©, caboco, massa, maninho, barbaridade";
    }

    // Manchetes
    gerarManchetePrincipal() {
        const manchetes = [
            "Obras na Constantino Nery prometem melhorar tr√¢nsito",
            "Festival de Parintins 2025 ter√° novidades especiais",
            "Teatro Amazonas completa mais um ano de hist√≥ria",
            "Mercado Municipal ganha cara nova com revitaliza√ß√£o"
        ];
        return manchetes[Math.floor(Math.random() * manchetes.length)];
    }

    // Respostas
    gerarRespostaTaina() {
        const respostas = [
            "Eita, n√©! √â bem assim mesmo!",
            "Massa, Ira√≠! Concordo contigo!",
            "N√©, meu povo? Exatamente isso!"
        ];
        return respostas[Math.floor(Math.random() * respostas.length)];
    }
    
    gerarRespostaIrai() {
        const respostas = [
            "Pois √©, Tai! √â exatamente assim!",
            "Rapaz, voc√™ falou tudo!",
            "√â bem assim mesmo, n√©?"
        ];
        return respostas[Math.floor(Math.random() * respostas.length)];
    }

    // Metadados
    obterDuracao() {
        return "15-20 minutos";
    }
    
    obterTimestamp() {
        return new Date().toISOString();
    }
    
    obterTemasPrincipais() {
        return "Not√≠cias locais, cultura amaz√¥nica, eventos regionais";
    }
    
    obterTimeFoco() {
        return Math.random() > 0.5 ? "Garantido" : "Caprichoso";
    }

    // T√©cnicos
    obterEfeitosSonoros() {
        return "Som ambiente de floresta, vinhetas regionais";
    }
    
    obterObservacoesTecnicas() {
        return "Pausas naturais, varia√ß√£o de velocidade por personagem, √™nfase em g√≠rias regionais";
    }

    // === FIM DAS IMPLEMENTA√á√ïES ===`;

        try {
            // Ler arquivo atual
            let conteudo = fs.readFileSync(this.geradorPath, 'utf8');
            
            // Verificar se j√° tem as implementa√ß√µes
            if (conteudo.includes('// === IMPLEMENTA√á√ïES DE TODAS AS VARI√ÅVEIS ===')) {
                console.log('‚ö†Ô∏è Implementa√ß√µes j√° existem no arquivo');
                return;
            }
            
            // Inserir implementa√ß√µes antes do √∫ltimo }
            const ultimaChave = conteudo.lastIndexOf('}');
            const novoConteudo = conteudo.slice(0, ultimaChave) + implementacoes + '\\n' + conteudo.slice(ultimaChave);
            
            // Salvar arquivo
            fs.writeFileSync(this.geradorPath, novoConteudo);
            
            console.log('‚úÖ Todas as implementa√ß√µes adicionadas ao gerarRoteiro.js');
            console.log('üìä Total: 30 vari√°veis implementadas');
            console.log('üéØ Agora execute: npm run teste-episodio');
            
        } catch (error) {
            console.error('‚ùå Erro ao implementar:', error.message);
        }
    }
}

// Executar implementa√ß√£o
const implementador = new ImplementadorVariaveis();
implementador.implementarTodasVariaveis();