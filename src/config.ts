import path from 'path';

// Usar __dirname para garantir caminhos absolutos robustos
const __dirname = path.resolve(path.dirname('')); // Simula __dirname em m√≥dulos ES

export const SRC_DIR = path.resolve(__dirname, 'src');
export const DATA_DIR = path.resolve(__dirname, 'data');
export const EPISODIOS_DIR = path.resolve(__dirname, 'episodios');

const ROOT_DIR = path.resolve(__dirname, '..');

const AUDIOS_GERADOS_DIR = path.join(ROOT_DIR, 'audios_gerados');
const ROTEIRO_DIR = path.join(ROOT_DIR, 'roteiro');

export const config = {
  // Qual API usar para a gera√ß√£o de conte√∫do
  apiProvider: process.env.API_PROVIDER || 'gemini', // Op√ß√µes: 'openai', 'gemini'

  // Modelos de IA a serem usados
  models: {
    roteiro: process.env.MODEL_ROTEIRO || 'gemini-1.5-pro-latest',
    sugestao: process.env.MODEL_SUGESTAO || 'gemini-1.5-flash',
    analise: process.env.MODEL_ANALISE || 'gemini-1.5-flash',
  },

  // Configura√ß√µes do Podcast
  podcast: {
    prioridade_cold_open: 'noticia' as 'noticia' | 'efemeride',
  },

  // Caminhos do projeto (relativos √† raiz)
  paths: {
    // Diret√≥rios base
    data: DATA_DIR,
    episodios: EPISODIOS_DIR,
    audios: path.join(ROOT_DIR, 'audios'),
    episodios_finais: path.join(ROOT_DIR, 'episodios_finais'),
    src: path.join(ROOT_DIR, 'src'),
    audioOutputDir: AUDIOS_GERADOS_DIR,
    roteirosDir: EPISODIOS_DIR,

    // Arquivos espec√≠ficos
    noticiasRecentesFile: path.join(DATA_DIR, 'noticias-recentes.json'),
    pautaDoDiaFile: path.join(DATA_DIR, 'episodio-do-dia.json'),
    estadoColetaFile: path.join(DATA_DIR, 'estado_coleta.json'),
    sugestoesAberturaFile: path.join(DATA_DIR, 'sugestoes-abertura.json'),
    personagensFile: path.join(DATA_DIR, 'personagens.json'),
    roteiroTemplateFile: path.join(ROTEIRO_DIR, 'roteiro-template.md'),
    ttsConfigFile: path.join(DATA_DIR, 'tts-config.json'),
  },

  // Configura√ß√µes de An√°lise
  analise: {
    relevanceKeywords: [
      // Cultura Pop & Geek (Peso Alto)
      "cinema", "s√©rie", "game", "e-sports", "anime", "geek", "nerd", "estreia", "lan√ßamento", "cosplay", "evento geek",

      // Tecnologia & Inova√ß√£o (Peso Alto)
      "tecnologia", "startup", "aplicativo", "inova√ß√£o", "intelig√™ncia artificial",

      // Rol√™ Cultural & Bizarrices (Peso M√©dio)
      "festival", "show", "exposi√ß√£o", "gratuito", "parintins", "lenda", "bizarro", "mist√©rio", "inusitado", "gastronomia",

      // Impacto Direto e Servi√ßos (Peso Alto para Relev√¢ncia)
      "manaus", "amazonas", "concurso", "transporte p√∫blico", "tarifa", "sa√∫de", "educa√ß√£o", "semed", "semsa", "√°gua", "energia",

      // Nomes de Grande Relev√¢ncia
      "Wilson Lima", "David Almeida",

      // Eventos Naturais de Grande Impacto
      "cheia", "seca", "br-319", "queimadas"
    ],
    sourceWeights: {
      'G1 Amazonas': 10,
      'A Cr√≠tica': 8,
      'D24AM': 7,
      'Portal do Holanda': 9
    },
    classificationGuide: {
      "‚ö´Ô∏è 1": { label: "Seguran√ßa & BOs de Impacto", categoria: "cidades" },
      "üü° 2": { label: "Pol√≠tica de Bar√©", categoria: "politica" },
      "üî¥ 3": { label: "Perrengues da Cidade", categoria: "cidades" },
      "üöÄ 4": { label: "Tecnologia & Inova√ß√£o do Igarap√©", categoria: "economia" },
      "üé¨ 5": { label: "Cultura Pop & Geek de Rede", categoria: "cultura" },
      "üé≠ 6": { label: "Rol√™ Cultural", categoria: "cultura" },
      "üëΩ 7": { label: "Bizarrices da Bubuia", categoria: "cultura" }
    }
  },

  tts: {
    sugestoesAberturaFile: path.join(DATA_DIR, 'sugestoes-abertura.json'),
    personagensFile: path.join(DATA_DIR, 'personagens.json'),
    ttsConfigFile: path.join(DATA_DIR, 'tts-config.json'),
    roteiroTemplateFile: path.join(ROTEIRO_DIR, 'roteiro-template.md'),
    roteirosDir: EPISODIOS_DIR, // Adicionado para roteiros
    audioOutputDir: path.resolve(__dirname, '..', 'audios_gerados'), // Adicionado para sa√≠da de √°udio
  },

  geracaoAudio: {
    categoriaParaEstilo: {
      '‚ö´Ô∏è': 'serio_ou_analitico',
      'üü°': 'serio_ou_analitico',
      'üî¥': 'indignado_leve',
      'üöÄ': 'animado',
      'üé¨': 'animado',
      'üé≠': 'animado',
      'üëΩ': 'curioso_ou_bizarro',
    },
  },

  mixagem: {
    ffmpegPath: process.env.FFMPEG_PATH || 'C:/Program Files/ffmpeg/bin/ffmpeg.exe',
    crossfadeDuration: 2,
  },
};
